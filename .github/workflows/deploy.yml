name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init
        working-directory: deploy/terraform

      - name: Terraform Format Check
        run: terraform fmt -check
        working-directory: deploy/terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: deploy/terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: deploy/terraform
        env:
          TF_VAR_ionos_token: ${{ secrets.IONOS_TOKEN }}

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: deploy/terraform/tfplan

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: production  # üîê Ce job attendra une validation manuelle via GitHub UI
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Download tfplan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: deploy/terraform

      - run: terraform init
        working-directory: deploy/terraform

      - run: terraform apply -auto-approve tfplan
        working-directory: deploy/terraform
        env:
          TF_VAR_ionos_token: ${{ secrets.IONOS_TOKEN }}

  build:
    needs: terraform-apply
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Ionos registry
        run: docker login lucas-rex.cr.de-fra.ionos.com -u lucas-git-token -p ${{ secrets.IONOS_REGISTRY_KEY }}

      - name: Build the Docker app image
        run: |
          TIMESTAMP=$(date +%s)
          cd app
          docker build . --file Dockerfile --tag lucas-rex.cr.de-fra.ionos.com/miranui/miranui-poc-app:$TIMESTAMP
          docker push lucas-rex.cr.de-fra.ionos.com/miranui/miranui-poc-app:$TIMESTAMP

      - name: Build the Docker front image
        run: |
          TIMESTAMP=$(date +%s)
          cd frontend
          docker build . --file Dockerfile --tag lucas-rex.cr.de-fra.ionos.com/miranui/miranui-poc-frontend:$TIMESTAMP
          docker push lucas-rex.cr.de-fra.ionos.com/miranui/miranui-poc-frontend:$TIMESTAMP

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.IONOS_SSH_PRIVATE_KEY }}

      - uses: actions/checkout@v4

      - name: Copy files to Ionos VM
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ \
          ${{ secrets.IONOS_USER }}@${{ secrets.IONOS_HOST }}:/home/${{ secrets.IONOS_USER }}/app

      - name: Remote deploy commands
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.IONOS_USER }}@${{ secrets.IONOS_HOST }} << 'EOF'
            cd ~/app/deploy
            bash setup.sh
          EOF
